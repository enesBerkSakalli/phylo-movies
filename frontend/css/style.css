/* Reset and Base Styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html,
body {
  height: 100%;
  width: 100%;
  font-family: var(--font-family-sans-serif, 'Heebo', sans-serif);
  background: var(--background-color-main, #fff);
  color: var(--text-color-main, #222);
  font-size: var(--font-size-md, 13px); /* Base font size for the app */
  line-height: 1.6; /* Improved readability */
}

/* General Styles */
.container {
  display: flex;
  flex-direction: row;
  width: 100vw;
  height: 100vh;
  min-height: 0;
  min-width: 0;
}

.menu {
  width: 320px;
  min-width: 250px;
  max-width: 400px;
  flex-shrink: 0;
  height: 100vh;
  overflow-y: auto;
  background-color: #373747;
  color: white;
}

.full-size-container {
  flex: 1 1 0%;
  min-width: 0;
  min-height: 0;
  background: #fff;
  display: flex;
  align-items: stretch;
  justify-content: stretch;
}

#application-container {
  width: 100%;
  height: 100%;
  align-self: stretch;
  display: block;
}

/* Custom horizontal scrollbar for the menu */
.menu::-webkit-scrollbar {
  height: 10px;
}
.menu::-webkit-scrollbar-track {
  background: #373747; /* Match menu background */
}
.menu::-webkit-scrollbar-thumb {
  background: #555;
  border-radius: 5px;
  border: 2px solid #373747;
}
.menu::-webkit-scrollbar-thumb:hover {
  background: #777;
}

/* Header and Menu */
.menu-header {
  padding-top: 5%;
  padding-bottom: 5%;
}

.header {
  display: flex;
}

.logo {
  padding-top: 5px;
  padding-inline: 20px;
}

.fa-film {
  color: #ffff;
}

/* Tools and Controls */
.tools div {
  margin-top: 3px;
}

.row {
  display: flex;
  align-items: center;
  margin-bottom: 8px; /* Standardized margin */
}

.row .menuItem {
  margin-right: 8px; /* Standardized margin */
  min-width: 120px; /* Keeping specific min-width */
}



select {
  appearance: none;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23555'%3E%3Cpath d='M8 11.207L2.396 5.604l.707-.707L8 9.793l4.896-4.896.707.707z'/%3E%3C/svg%3E"); /* Arrow for light theme */
  background-repeat: no-repeat;
  background-position: right 10px center;
  background-size: 16px;
  padding-right: 36px; /* Ensure space for arrow */
}

.menu select, .dark-container select {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23aaa'%3E%3Cpath d='M8 11.207L2.396 5.604l.707-.707L8 9.793l4.896-4.896.707.707z'/%3E%3C/svg%3E"); /* Arrow for dark theme */
}


/* Standardized Button Styling */
/* Base button style - can be extended with classes like .btn-primary, .btn-secondary */
button,
.btn {
  padding: 8px 16px;
  border: 1px solid transparent; /* For border-based variants if needed */
  border-radius: var(--standard-border-radius);
  color: var(--text-on-primary);
  background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-color-darker) 100%);
  font-weight: var(--font-weight-medium, 500);
  font-size: var(--font-size-md, 13px);
  line-height: 1.5;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  cursor: pointer;
  transition: all 0.2s ease-in-out;
  text-align: center;
  vertical-align: middle;
  user-select: none;
  text-decoration: none; /* For <a> elements styled as buttons */
}

button:hover,
.btn:hover {
  background: linear-gradient(135deg, var(--primary-color-darker) 0%, var(--primary-color) 100%);
  box-shadow: var(--shadow-md);
  transform: translateY(-1px);
}

button:focus,
.btn:focus {
  outline: none;
  /* Create a focus ring using box-shadow. Offset by 2px from element, 3px wide. */
  box-shadow: 0 0 0 var(--focus-ring-offset) var(--background-color-main), 0 0 0 calc(var(--focus-ring-offset) + var(--focus-ring-width)) var(--primary-color);
}
/* For dark backgrounds, the focus ring's first shadow should match that background */
.menu button:focus, .menu .btn:focus,
.dark-container button:focus, .dark-container .btn:focus {
  box-shadow: 0 0 0 var(--focus-ring-offset) var(--background-color-menu), 0 0 0 calc(var(--focus-ring-offset) + var(--focus-ring-width)) var(--primary-color);
}


button:active,
.btn:active {
  transform: translateY(0);
  box-shadow: var(--shadow-sm);
}

button:disabled,
.btn:disabled {
  background: #aeaeae; /* More standard disabled color */
  color: #757575;
  cursor: not-allowed;
  transform: none;
  box-shadow: none;
  opacity: 0.65;
}


/* Sliders and Switches */
.uk-range {
  width: 100%;
}

/* Text and Headers */
h1 {
  font-size: 1.5em; /* Typically 24px if base is 16px */
  margin-bottom: 16px; /* Added some default spacing */
  color: var(--text-color-main); /* Ensure h1 uses theme text color */
}


/* Blinking Animation */
.blink_me {
  animation: blinker 1s linear infinite;
}

@keyframes blinker {
  50% {
    opacity: 0;
  }
}

/* Tooltip Styles */
.tooltip {
  position: absolute;
  opacity: 0;
  background-color: var(--background-color-main);
  border: 1px solid var(--input-border-light); /* Was #ccc */
  border-radius: var(--standard-border-radius); /* Was 5px */
  padding: 8px;
  font-size: 12px;
  font-family: Arial, sans-serif;
  color: #333;
  pointer-events: none;
  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
  white-space: nowrap;
  z-index: 1000;
  transition: opacity 0.3s;
}

/* Modal Chart */
#modal-graph-chart {
  flex: 1;
  height: 100%;
  width: 100%;
  position: relative;
}



.toggle-icon { /* Generally styled in navigation.css for menu context */
  font-size: 12px;
  color: var(--text-color-dark-theme-muted);
  transition: transform 0.3s;
}

/* .position-control and .factor-control are specific to menu. */
/* Their current margins (16px top, 6px bottom for label) are reasonable. */
/* If they need variable colors: */
.position-control label, .factor-control label {
  color: var(--text-color-dark-theme-muted); /* Already set this way */
}


/* Enhanced Branding Styles (mostly for .menu context, potentially overridden by navigation.css) */
/* This .menu-header seems to be a general one, while navigation.css has a more specific one */
.menu-header {
  padding: var(--spacing-large, 16px) var(--spacing-medium, 12px) var(--spacing-sm, 8px); /* Was 20px 15px 10px */
  background-color: rgba(0, 0, 0, 0.2); /* Keep as is or use a variable */
  border-radius: var(--large-border-radius, 8px);
  margin-bottom: var(--spacing-large, 16px); /* Was 15px */
}

.app-branding {
  display: flex;
  align-items: center;
  margin-bottom: 15px;
}

.branding-icon {
  font-size: 24px;
  color: var(--primary-color);
  margin-right: var(--spacing-medium, 12px);
}

.app-titles {
  flex: 1;
}


.commitmessage {
  font-size: 11px;
  color: var(--text-color-dark-theme-muted); /* Was #aaa */
  margin-top: 4px; /* Align to 4px grid */
}

.commit-hash {
  font-family: var(--font-family-monospace, monospace);
  background-color: var(--input-background-dark, rgba(255, 255, 255, 0.1));
  padding: var(--spacing-xs, 4px) var(--spacing-sm, 8px); /* Was 1px 4px */
  border-radius: var(--standard-border-radius, 4px); /* Was 3px */
}


.brand-separator {
  height: 3px;
  background: linear-gradient(to right, var(--primary-color) 0%, rgba(var(--primary-color-rgb), 0.1) 100%);
  border-radius: 3px;
  margin-bottom: var(--spacing-large, 16px);
}

/* .select-arrow is for a custom non-standardized select. Standardized 'select' has its own SVG arrow. */
/* This can be removed if all selects are standardized, or kept for specific legacy cases. */
/* For now, I'll adjust its color. */
.select-arrow {
  position: absolute;
  right: 8px;
  top: 50%;
  transform: translateY(-50%);
  color: var(--text-color-dark-theme-muted); /* Was rgba(255, 255, 255, 0.6) */
  pointer-events: none;
}

.playback-controls {
  flex-grow: 2;
  justify-content: center;
}

.tool-controls {
  flex-grow: 1;
  justify-content: flex-end;
}

/* Material Design Button Controls */
.control-panel {
  display: flex;
  flex-direction: column;
  gap: 8px; /* Was 10px */
  margin-bottom: 16px; /* Was 20px */
  padding: 8px 0; /* Vertical padding is fine */
}

.button-row {
  display: flex;
  justify-content: center;
}

.button-group { /* This is a specific component, likely in the menu */
  display: flex;
  gap: 4px;
  background-color: var(--input-background-dark);
  padding: var(--spacing-xs, 4px);
  border-radius: var(--large-border-radius);
  box-shadow: var(--shadow-sm);
}

.option-row {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--spacing-sm, 8px);
  background-color: rgba(0,0,0,0.1);
  border-radius: var(--standard-border-radius);
  padding: var(--spacing-sm, 8px) var(--spacing-medium, 12px);
}

.option-row label {
  font-size: 12px;
  color: var(--text-color-dark-theme-main); /* Was #ddd */
}

.option-row select { /* This is a specific select, possibly to be replaced by standard select styling if applicable */
  background-color: rgba(0,0,0,0.2); /* Darker than standard menu input */
  color: var(--text-color-dark-theme-main);
  border: 1px solid var(--border-color-dark-theme);
  border-radius: var(--standard-border-radius);
  padding: var(--spacing-sm, 8px) var(--spacing-medium, 12px); /* Adjusted to match standardized inputs, check select arrow */
  font-size: var(--font-size-sm, 12px);
}

#group-separator-container {
  display: none;
}

/* Show group separator when groups method is selected */
.coloring-method-groups #group-separator-container {
  display: flex;
}

/* Chart Modal Styling */
.winbox.modern.modal {
  border-radius: var(--large-border-radius, 8px);
  box-shadow: var(--shadow-lg, 0 10px 30px rgba(0, 0, 0, 0.3));
}

.winbox.modern.modal .wb-body {
  background: var(--dialog-background-color, #23242b);
}

.winbox.modern.modal .wb-title {
  font-family: var(--font-family-sans-serif, 'Heebo', sans-serif);
  font-weight: var(--font-weight-medium, 500);
  font-size: var(--font-size-lg, 18px); /* Was 16px */
  color: var(--text-color-dark-theme-emphasis, #e3eaf2); /* More emphasis for title */
  color: #333;
}


/* --- MSA Viewer Scrolling Fix --- */

/*
  This rule is the most important. It forces the WinBox content area
  to hide any overflow, preventing the "double scrollbar" problem.
  The scrolling will be handled by an inner div inside the React component.
*/
.winbox .wb-body {
  overflow: hidden !important;
}

/*
  The AlignmentViewer2Component has an inner wrapper with `overflow: auto`.
  We can style its scrollbars for a better look.
*/
.alignment-viewer-2 .viewport::-webkit-scrollbar,
div[style*="overflow: auto"]::-webkit-scrollbar {
  width: 10px;
  height: 10px;
}

div[style*="overflow: auto"]::-webkit-scrollbar-track {
  background: #f1f1f1;
}

div[style*="overflow: auto"]::-webkit-scrollbar-thumb {
  background: #888;
  border-radius: 5px;
}

div[style*="overflow: auto"]::-webkit-scrollbar-thumb:hover {
  background: #555;
}

/* Ensure AlignmentViewer components are properly constrained */
.alignment-viewer-container,
.alignment-viewer,
div[class*="AlignmentViewer"] {
  max-width: 100% !important;
  max-height: 100% !important;
}

/* Allow internal scrolling from AlignmentViewer 2.0 */
.alignment-viewer-2 .viewport,
.alignment-viewer-2 .main-viewport,
.alignment-viewer-2 [class*="viewport"],
.alignment-viewer-2 [class*="scroll"] {
  overflow: auto !important; /* Allow internal scrolling within the viewer */
}

/* But prevent outer container from creating additional scrollbars */
.alignment-viewer-2 {
  overflow: visible !important; /* Let the internal components handle scrolling */
  width: 100% !important;
  height: 100% !important;
}

/* Specific AlignmentViewer 2.0 scrolling support */
.alignment-viewer-2 .main-container,
.alignment-viewer-2 .sequence-container,
.alignment-viewer-2 .alignment-container {
  overflow: auto !important;
}

/* Ensure horizontal scrolling works in MSA */
.alignment-viewer-2 .sequence-row,
.alignment-viewer-2 .alignment-row {
  white-space: nowrap !important;
  overflow-x: auto !important;
}

/* Ensure the main alignment content can overflow horizontally */
.alignment-viewer-2 .main-viewport,
.alignment-viewer-2 .alignment-content,
.alignment-viewer-2 .alignment-row,
.alignment-viewer-2 .sequence-row {
  white-space: nowrap !important;
  min-width: max-content !important;
  width: auto !important;
  max-width: none !important;
}

/* Make sure minimap and other components don't interfere */
.alignment-viewer-2 .minimap-container {
  overflow: visible !important;
}

/* Ensure proper scrollbar styling in MSA viewer */
.alignment-viewer-2 ::-webkit-scrollbar {
  width: 12px;
  height: 12px;
}

.alignment-viewer-2 ::-webkit-scrollbar-track {
  background: #f1f1f1;
  border-radius: 6px;
}

.alignment-viewer-2 ::-webkit-scrollbar-thumb {
  background: #888;
  border-radius: 6px;
}

.alignment-viewer-2 ::-webkit-scrollbar-thumb:hover {
  background: #555;
}

/* AlignmentViewer 2.0 SVG Icon Fixes - Fix for undefined/close.svg error */
.alignment-viewer-2 [style*="close.svg"],
.alignment-viewer-2 .close-button,
.alignment-viewer-2 [class*="close"],
.alignment-viewer-2 [aria-label*="close" i],
.alignment-viewer-2 [title*="close" i] {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23666'%3E%3Cpath d='M3.293 3.293a1 1 0 011.414 0L8 6.586l3.293-3.293a1 1 0 111.414 1.414L9.414 8l3.293 3.293a1 1 0 01-1.414 1.414L8 9.414l-3.293 3.293a1 1 0 01-1.414-1.414L6.586 8 3.293 4.707a1 1 0 010-1.414z'/%3E%3C/svg%3E") !important;
  background-size: 16px 16px !important;
  background-repeat: no-repeat !important;
  background-position: center !important;
}

/* Fix for any other missing AlignmentViewer 2.0 SVG icons */
.alignment-viewer-2 [style*="undefined/"],
.alignment-viewer-2 [src*="undefined/"] {
  display: none !important;
}

/* Alternative: Provide text fallback for close buttons */
.alignment-viewer-2 [style*="close.svg"]:empty::before,
.alignment-viewer-2 .close-button:empty::before {
  content: "×" !important;
  font-size: 16px !important;
  font-weight: bold !important;
  color: #666 !important;
  display: inline-block !important;
  text-align: center !important;
  line-height: 1 !important;
}

/* Tree Status Panel styles moved to navigation.css */

.status-grid {
  display: flex !important;
  flex-direction: row !important;
  gap: 16px;
  align-items: flex-start;
  justify-content: space-between;
  width: 100%;
  flex-wrap: nowrap; /* Prevent wrapping */
}

.status-item {
  display: flex !important;
  flex-direction: column !important;
  flex: 1 1 0%;
  min-width: 0; /* Allows flex items to shrink below their content size */
  text-align: center;
  max-width: 33.333%; /* Ensure equal width distribution */
}

.status-label {
  font-size: 11px;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  color: var(--text-color-dark-theme-muted); /* Was #aaa */
  margin-bottom: 4px;
}

.status-value {
  font-size: 15px;
  font-weight: 500;
  color: var(--text-color-dark-theme-main); /* Was #fff */
}

/* Navigation Panel Components styles moved to navigation.css */

.panel-header { /* Likely in menu context */
  display: flex;
  align-items: center;
  gap: 8px;
  margin-bottom: 12px;
}

.panel-icon {
  color: var(--primary-color);
  font-size: var(--font-size-md, 14px); /* Adjusted to md */
}

.panel-title {
  font-size: var(--font-size-md, 13px);
  font-weight: var(--font-weight-medium, 500);
  color: var(--text-color-dark-theme-main);
}

/* Parameter List */
.param-list {
  background-color: rgba(0,0,0,0.1);
  border-radius: var(--standard-border-radius);
  padding: var(--spacing-medium, 12px);
}

.param-item {
  display: flex;
  justify-content: space-between;
  padding: var(--spacing-sm, 8px) 0;
  border-bottom: 1px solid var(--border-color-dark-theme);
}

.param-item:last-child {
  border-bottom: none;
}

.param-name {
  font-size: 12px;
  color: #aaa;
}

.param-value {
  font-size: 13px;
  font-weight: 500;
  color: #fff;
}

/* Position Control */
.position-control { /* Specific layout class */
  margin-top: 0; /* Overrides a previous margin, specific use */
}

/* Responsive adjustments for status grid */
@media (max-width: 768px) {
  .status-grid {
    flex-direction: row !important; /* Keep horizontal even on mobile */
    gap: 8px; /* Reduce gap on smaller screens */
    flex-wrap: nowrap;
  }

  .status-item {
    text-align: center; /* Keep centered on mobile */
    max-width: 33.333%;
  }

  .status-label {
    font-size: 10px; /* Smaller font on mobile */
  }

  .status-value {
    font-size: 13px; /* Smaller font on mobile */
  }
}

