/**
 * GlobalThis stub for compatibility with libraries that expect globalThis
 * to be available in all environments (browser, Node.js, etc.)
 */

// Determine the global object for the current environment
const getGlobalObj = () => {
  if (typeof globalThis !== 'undefined') {
    return globalThis;
  } else if (typeof global !== 'undefined') {
    // Node.js environment
    global.globalThis = global;
    return global;
  } else if (typeof window !== 'undefined') {
    // Browser environment
    window.globalThis = window;
    return window;
  } else if (typeof self !== 'undefined') {
    // Web Worker environment
    self.globalThis = self;
    return self;
  } else {
    // Fallback - create a minimal global object
    return {};
  }
};

const globalObj = getGlobalObj();

// Named exports that match what different libraries expect
export default globalObj;
export { globalObj as global };

// CommonJS compatibility
if (typeof module !== 'undefined' && module.exports) {
  module.exports = globalObj;
  module.exports.global = globalObj;
  module.exports.globalThis = globalObj;
  module.exports.default = globalObj;
}
